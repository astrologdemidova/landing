import * as React from 'react';
import { ArrayContentTypeRitual } from './ContentTypeRitual';
import { ArrayContentTypeConsultation } from './ContentTypeConsultation';
// import { ArrayContentTypeStones } from './ContentTypeStones';
import { ArrayContentTypeMeditation } from './ContentTypeMeditation';
import { CatalogCard } from '../CatalogCard';
import { CatalogFooter } from '../CatalogFooter';
import { CustomMenuShop } from '../CustomMenuShop';
import { CustomButton } from '../../CustomButton';
import {
    CatalogHeaderContainer,
    DescriptionContainer,
    CatalogContainer,
    CatalogWrapperStyled,
    MenuButtonWrapper,
    AboutContainer,
    CatalogHeaderContainerPhoto
} from './styles';
import emoji from '../../../images/emoji-schh.png';
import BgPicture from '../../../images/red-min.jpg';
import { CustomCollapse } from '../CustomCollapse';
import { AboutBlock } from '../AboutBlock/AboutBlock';
import { SubHeader } from './components/SubHeader';

export const contentTypeMenu = 'CONTENT_TYPE_MENU'
export const contentTypeRitual = 'CONTENT_TYPE_RUNY'
export const contentTypeMeditation = 'CONTENT_TYPE_MEDITATION'
export const contentTypeConsultation = 'CONTENT_TYPE_CONSULTATION'
// export const contentTypeStones = 'CONTENT_TYPE_STONES'

export const CatalogWrapper = () => {
    const toggleContentTypeMeditation = true; // true - disable, false - enable
    const toggleContentTypeConsultation = false; // true - disable, false - enable
    const toggleContentTypeRitual = true; // true - disable, false - enable

    const [contentType, setContentType] = React.useState(contentTypeMenu)
    const data = new Map([
        [contentTypeRitual, ArrayContentTypeRitual],
        [contentTypeMeditation, ArrayContentTypeMeditation],
        [contentTypeConsultation, ArrayContentTypeConsultation],
        // [contentTypeStones, ArrayContentTypeStones],
    ])

    const contentTypeHandler = (contentTypeVar) => {
        return data.get(contentTypeVar).map((item, ind) => (
            <CatalogCard
                key={item.id}
                id={item.id}
                imgSrc={item.imgSrc}
                videoSrc={item.videoSrc}
                nameItem={item.nameItem}
                nameItemSub={item.nameItemSub}
                coast={item.coast}
                coast2={item.coast2}
                coastStrike={item.coastStrike}
                description={item.description}
                faq={item.faq}
                linkPay={item.linkPay}
                buttonName={item.buttonName}
                installment={item.installment}
                installment2={item.installment2}
                period={item.period}
                period2={item.period2}
                contentType={contentType}
                toggleLimit={item.toggleLimit}
            />
        ))
    }

    return (
        <>
            <CatalogWrapperStyled>
                <CatalogHeaderContainer>
                    <h1>–ú–∞–≥–∞–∑–∏–Ω –≤–æ–ª—à–µ–±—Å—Ç–≤–∞</h1>
                    <h2>–æ—Ç @astrolog_demidova</h2>
                    <img src={emoji} alt="" />
                </CatalogHeaderContainer>

                <SubHeader />

                {/* {contentType === contentTypeMenu && ()} */}

                <CatalogContainer>

                    <div id='anchor'></div>

                    <MenuButtonWrapper>
                        <a href='#anchor'><CustomButton onClick={() => setContentType(contentType === contentTypeMeditation ? contentTypeMenu : contentTypeMeditation)}>–ú–µ–¥–∏—Ç–∞—Ü–∏–∏</CustomButton></a>
                    </MenuButtonWrapper>

                    {contentType === contentTypeMeditation && toggleContentTypeMeditation &&
                        <DescriptionContainer>
                            <ul>
                                <li>–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ —É—Å–ø–µ–ª–∏! –ú–µ–¥–∏—Ç–∞—Ü–∏–π –∏ —Ä–∏—Ç—É–∞–ª–æ–≤ —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ —Å—Ç–æ—Ä–∏–∑ , —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å , –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è ü§ç</li>
                            </ul>
                        </DescriptionContainer>
                    }

                    {contentType === contentTypeMeditation && !toggleContentTypeMeditation &&
                        <DescriptionContainer>
                            <ul>
                                <li>–ú–û–ò –ú–ï–î–ò–¢–ê–¶–ò–ò –ù–ï –ü–†–û –î–£–•–û–í–ù–û–°–¢–¨. –≠–¢–û –¶–ï–õ–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –†–ê–ë–û–¢–ê –° –ü–û–î–°–û–ó–ù–ê–ù–ò–ï–ú.</li>
                                <li>–í–ù–£–¢–†–ò –ö–ê–ñ–î–û–ì–û –ò–ó –ù–ê–° –£–ñ–ï –ï–°–¢–¨ –í–°–ï –û–¢–í–ï–¢–´ : –ß–ï–ú –Ø –•–û–ß–£ –ó–ê–ù–ò–ú–ê–¢–¨–°–Ø/–í –ß–ï–ú –Ø –ü–†–ï–£–°–ü–ï–Æ/–ß–¢–û –ú–ù–ï –ü–†–ò–ù–ï–°–Å–¢ –ú–ù–û–ì–û –î–ï–ù–ï–ì –ò –†–ï–ê–õ–ò–ó–ê–¶–ò–Æ.</li>
                                <li>–ù–æ –ª–æ–≥–∏–∫–∞ –æ—á–µ–Ω—å –º–µ—à–∞–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–º —ç—Ç–∏ –æ—Ç–≤–µ—Ç—ã. –ü–æ—ç—Ç–æ–º—É –º—ã —Å –≤–∞–º–∏ –¥–æ—Å—Ç—É—á–∏–º—Å—è –¥–æ –∏—Å—Ç–∏–Ω—ã —á–µ—Ä–µ–∑ –º–µ–¥–∏—Ç–∞—Ü–∏–∏</li>
                            </ul>
                        </DescriptionContainer>
                    }

                    {contentType === contentTypeMeditation && !toggleContentTypeMeditation && contentTypeHandler(contentType)}

                    <MenuButtonWrapper>
                        <a href='#anchor'><CustomButton onClick={() => setContentType(contentType === contentTypeConsultation ? contentTypeMenu : contentTypeConsultation)}>–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏</CustomButton></a>
                    </MenuButtonWrapper>

                    {contentType === contentTypeConsultation && toggleContentTypeConsultation &&
                        <DescriptionContainer>
                            <ul>
                                <li>–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ —É—Å–ø–µ–ª–∏! –ú–µ–¥–∏—Ç–∞—Ü–∏–π –∏ —Ä–∏—Ç—É–∞–ª–æ–≤ —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ —Å—Ç–æ—Ä–∏–∑ , —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å , –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è ü§ç</li>
                            </ul>
                        </DescriptionContainer>
                    }

                    {contentType === contentTypeConsultation && !toggleContentTypeConsultation &&
                        <ul style={{ listStyle: 'none', padding: '0 40px' }}>
                            <li>
                                <b>*</b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —è —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Å—å –∏ –º—ã –ø–æ–¥–±–µ—Ä–µ–º —É–¥–æ–±–Ω—É—é –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –¥–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω-–≤—Å—Ç—Ä–µ—á–∏.<br /><br />
                                –£ –º–µ–Ω—è –≤—Å–µ–≥–¥–∞ –∑–∞–ø–∏—Å—å –ø—Ä–∏–±–ª–∏–∑–∏–≤—à–∏—Å—å –Ω–∞ –º–µ—Å—è—Ü –≤–ø–µ—Ä—ë–¥, –Ω–æ –µ—Å–ª–∏ –≤–∞–º –æ—á–µ–Ω—å –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ - –æ–±—Å—É–¥–∏–º‚ú®
                            </li>
                        </ul>
                    }

                    {contentType === contentTypeConsultation && !toggleContentTypeConsultation && contentTypeHandler(contentType)}

                    <MenuButtonWrapper>
                        <a href='#anchor'><CustomButton onClick={() => setContentType(contentType === contentTypeRitual ? contentTypeMenu : contentTypeRitual)}>–†–∏—Ç—É–∞–ª—ã</CustomButton></a>
                    </MenuButtonWrapper>

                    {contentType === contentTypeRitual && toggleContentTypeRitual &&
                        <DescriptionContainer>
                            <ul>
                                <li>–£–ø—Å! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ —É—Å–ø–µ–ª–∏! –ú–µ–¥–∏—Ç–∞—Ü–∏–π –∏ —Ä–∏—Ç—É–∞–ª–æ–≤ —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤ –ø—Ä–æ–¥–∞–∂–µ. –°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ —Å—Ç–æ—Ä–∏–∑ , —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å , –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è ü§ç</li>
                            </ul>
                        </DescriptionContainer>
                    }

                    {contentType === contentTypeRitual && !toggleContentTypeRitual &&
                        <ul style={{ listStyle: 'none', padding: '0 40px' }}>
                            <li><b>*</b>–í—Å–µ —Ä–∏—Ç—É–∞–ª—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–Ω–æ–≥–æ —Ä–∞–∑. –û–Ω–∏ –æ—Å—Ç–∞—é—Ç—Å—è —Å –≤–∞–º–∏ –Ω–∞ –≤—Å—é –∂–∏–∑–Ω—å!<br /><br /></li>
                            <li><b>*</b>–†–∏—Ç—É–∞–ª—ã –¥–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è. –û–Ω–∏ –ª–µ–≥–∫–∏–µ –≤ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏, –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ, –ø—Ä–∏ —ç—Ç–æ–º –æ—á–µ–Ω—å –¥–µ–π—Å—Ç–≤–µ–Ω–Ω—ã–µ</li>
                        </ul>
                    }

                    {contentType === contentTypeRitual && !toggleContentTypeRitual && contentTypeHandler(contentType)}

                    {/* <MenuButtonWrapper>
                        <a href='#anchor'><CustomButton onClick={() => setContentType(contentType === contentTypeStones ? contentTypeMenu : contentTypeStones)}>–ö–∞–º–Ω–∏</CustomButton></a>
                    </MenuButtonWrapper> */}
                </CatalogContainer>

                {/* <CatalogContainer>
                    {contentType !== contentTypeMenu && contentTypeHandler(contentType)}
                </CatalogContainer> */}

                <CatalogHeaderContainer>
                    <h1>–û–±–æ –º–Ω–µ</h1>
                    <h2>@astrolog_demidova</h2>
                </CatalogHeaderContainer>

                <AboutContainer>
                    <img className='red' src={BgPicture} alt="" />
                </AboutContainer>

                <CatalogHeaderContainerPhoto>
                    <h1>–Ø–Ω–∞ –î–µ–º–∏–¥–æ–≤–∞.</h1>
                    <h2>–û–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –≤—ã—Å–æ–∫–æ–æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã—Ö<br />–∞—Å—Ç—Ä–æ–ª–æ–≥–æ–≤ –†–æ—Å—Å–∏–∏.</h2>
                </CatalogHeaderContainerPhoto>

                <AboutBlock />

                <CustomMenuShop setContentType={setContentType} />
                {contentType !== contentTypeMenu && <CustomCollapse setContentType={setContentType} />}
            </CatalogWrapperStyled>
            <CatalogFooter />
        </>
    )
}
