import axios from "axios";
import React, { useState } from "react";
import { CustomButton } from "../CustomButton/CustomButton";
import { TextWrapper, FormWrapper, FormRow, SpaceBlock, FormInput } from './styles';

const dataText = {
    '001': [
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –ø—Ä–∏–∑ —É–∂–µ –≤—ã–∏–≥—Ä–∞–Ω:(',
        '',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '002': [
        '–£—Ä–∞–∞–∞–∞! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø—Ä–∏–∑, —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 2000 —Ä—É–±–ª–µ–π:',
        '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ¬´–ö–∞–º–Ω–∏ –∂–∏–∑–Ω–∏¬ªüò±üëèüî•',
        '–¢–µ–ø–µ—Ä—å –≤—ã –°–ê–ú–ò, –ø–æ —Å–≤–æ–µ–º—É –≥–æ—Ä–æ—Å–∫–æ–ø—É, —Å–º–æ–∂–µ—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫–∏–µ –∫–∞–º–Ω–∏ –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—Ç –∏ –ø–æ–º–æ–≥–∞—é—Ç —É–ª—É—á—à–∏—Ç—å –≥–ª–∞–≤–Ω—ã–µ —Å—Ñ–µ—Ä—ã –∂–∏–∑–Ω–∏.',
        '',
        'P.S. –ù–∞–¥–µ—é—Å—å –≤—ã –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ –ø–æ—á—Ç—É? –ï—Å–ª–∏ –¥–∞, —Ç–æ –≤—Å–µ –ø–∏—Å—å–º–∞ –¥–ª—è –≤–∞—Å —É–∂–µ —Ç–∞–º.',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '003': [
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –ø—Ä–∏–∑ —É–∂–µ –≤—ã–∏–≥—Ä–∞–Ω:(',
        '',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '004': [
        '–£—Ä–∞–∞–∞–∞! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø—Ä–∏–∑, —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 2000 —Ä—É–±–ª–µ–π:',
        '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ¬´–ó–Ω–∞–∫–∏ –í—Å–µ–ª–µ–Ω–Ω–æ–π¬ªüò±üëèüî•',
        '–¢–µ–ø–µ—Ä—å –≤—ã –°–ê–ú–ò —Å–º–æ–∂–µ—Ç–µ –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å —á—Ç–æ –∑–∞ –∑–Ω–∞–∫–∏ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤–∞–º –Ω–∞ –ø—É—Ç–∏ –∏ —á—Ç–æ –æ–Ω–∏ —Ö–æ—Ç—è—Ç —Å–∫–∞–∑–∞—Ç—å.',
        '–ï—Å—Ç—å —Ç–∞–∫–æ–π –≤–∏–¥ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏–∏, –∫–∞–∫ ¬´–ù–∏–º–∏—Ç–∞¬ª - –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—è –ø—Ä–µ–¥–∑–Ω–∞–º–µ–Ω–æ–≤–∞–Ω–∏–π.',
        '–¢–∞–∫–∂–µ –µ—Å—Ç—å –≤–µ–¥–∏—á–µ—Å–∫–∞—è –Ω—É–º–µ—Ä–æ–ª–æ–≥–∏—è.',
        '–≠—Ç–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ –æ–±–µ —Ç–µ—Ö–Ω–∏–∫–∏.',
        '–° —ç—Ç–æ–≥–æ –¥–Ω—è —É –≤–∞—Å –ª–µ–≥–∫–æ –∏ –ø—Ä–æ—Å—Ç–æ –±—É–¥–µ—Ç –ø–æ–ª—É—á–∞—Ç—å—Å—è –ª—é–±–æ–µ –¥–µ–ª–æ, —Ç–∫ –≤—ã –≤–æ–≤—Ä–µ–º—è —Å–º–æ–∂–µ—Ç–µ –∑–∞–º–µ—Ç–∏—Ç—å –∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –∑–Ω–∞–∫ ‚ú®',
        '',
        'P.S.–ù–∞–¥–µ—é—Å—å –≤—ã –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ –ø–æ—á—Ç—É? –ï—Å–ª–∏ –¥–∞, —Ç–æ –≤—Å–µ –ø–∏—Å—å–º–∞ –¥–ª—è –≤–∞—Å —É–∂–µ —Ç–∞–º',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '005': [
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –ø—Ä–∏–∑ —É–∂–µ –≤—ã–∏–≥—Ä–∞–Ω:(',
        '',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '006': [
        '–£—Ä–∞–∞–∞–∞! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø—Ä–∏–∑, —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 2000 —Ä—É–±–ª–µ–π:',
        '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ¬´–î–µ–Ω–µ–∂–Ω–∞—è —Å—Ñ–µ—Ä–∞¬ªüò±üëèüî•',
        '–¢–µ–ø–µ—Ä—å –≤—ã –°–ê–ú–ò —Å–º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ñ–µ—Ä—É, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø—Ä–∏–Ω–µ—Å—Ç–∏ –≤–∞–º –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Ö–æ–¥–∞üí∏',
        '',
        'P.S.–ù–∞–¥–µ—é—Å—å –≤—ã –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ –ø–æ—á—Ç—É? –ï—Å–ª–∏ –¥–∞, —Ç–æ –≤—Å–µ –ø–∏—Å—å–º–∞ –¥–ª—è –≤–∞—Å —É–∂–µ —Ç–∞–º',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '007': [
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –ø—Ä–∏–∑ —É–∂–µ –≤—ã–∏–≥—Ä–∞–Ω:(',
        '',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '008': [
        '–£—Ä–∞–∞–∞–∞! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, –≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –ø—Ä–∏–∑, —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 2000 —Ä—É–±–ª–µ–π:',
        '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è ¬´–ò–¥–µ–∞–ª—å–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä¬ªüò±üëèüî•',
        '–¢–µ–ø–µ—Ä—å –≤—ã –°–ê–ú–ò —Å–º–æ–∂–µ—Ç–µ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –∫–∞–∫–æ–π –ø–∞—Ä—Ç–Ω—ë—Ä –≤–∞–º –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç , –∏–ª–∏, –µ—Å–ª–∏ –≤—ã —É–∂–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö - –ø–æ–π–º—ë—Ç–µ , —á—Ç–æ –¥–ª—è –≤–∞–º —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º –≤ —Å–æ—é–∑–µ.',
        '–¢–∞–∫–∂–µ, –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤ —á–µ–º –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤–∞—à –ø–∞—Ä—Ç–Ω—ë—Ä, —á—Ç–æ –¥–ª—è –Ω–µ–≥–æ —è–≤–ª—è–µ—Ç—Å—è –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º –ª—é–±–≤–∏.',
        '–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å–µ–±—è –∏ –µ–≥–æ, –∞ –∑–Ω–∞—á–∏—Ç –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –±—É–¥—É—Ç –±–æ–ª–µ–µ –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–º–∏‚ú®',
        'P.S.–ù–∞–¥–µ—é—Å—å –≤—ã –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ –ø–æ—á—Ç—É? –ï—Å–ª–∏ –¥–∞, —Ç–æ –≤—Å–µ –ø–∏—Å—å–º–∞ –¥–ª—è –≤–∞—Å —É–∂–µ —Ç–∞–º',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '009': [
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –ø—Ä–∏–∑ —É–∂–µ –≤—ã–∏–≥—Ä–∞–Ω:(',
        '',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
    '010': [
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –ø—Ä–∏–∑ —É–∂–µ –≤—ã–∏–≥—Ä–∞–Ω:(',
        '',
        '–° –ª—é–±–æ–≤—å—é, –Ø–Ω–∞ü§ç'],
}

export const FortunaTextWinner = ({ typePrize }) => {
    let url_string = {};
    let url = {};
    if (typeof window !== `undefined`) {
        url_string = window.location.href;
        url = new URL(url_string);
    }

    let cust_email = url?.searchParams?.get("cust_email") || '';
    let cust_phone = url?.searchParams?.get("cust_phone") || '';
    let che = url?.searchParams?.get("che") || '';

    const superPrize = [
        '001',
        '003',
        '005',
        '007',
        '009',
        '010',
    ]
    const [titleForm, setTitleForm] = useState('');
    const thanksResponse = '–°–ø–∞—Å–∏–±–æ, —è —Å–∫–æ—Ä–æ —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏!';
    const errorResponse = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∫—É.';

    const [isDisabled, setIsDisabled] = useState(false);

    const [emailInput, setEmailInput] = useState(cust_email);
    const [phoneInput, setPhoneInput] = useState(cust_phone);
    const [nameInput, setNameInput] = useState('');
    const [instInput, setInstInput] = useState('');
    const [adressInput, setAdressInput] = useState('');

    const handlerSendMail = (e) => {
        e.preventDefault();
        if (!emailInput || !phoneInput) return;

        const checkSendValid = typeof window !== `undefined` && localStorage.getItem('Yrbf314');
        
        if (che === checkSendValid) {
            setTitleForm(thanksResponse);
            return;
        }
        setIsDisabled(true);

        axios
            .post('https://astrolog-fortuna-server.herokuapp.com/api/email/add-user-contact', null, {
                params: {
                    name: nameInput,
                    email: emailInput,
                    phone: phoneInput,
                    inst: instInput,
                    adress: adressInput,
                    id: typePrize?.id,
                }
            })
            .then(function (response) {
                typeof window !== `undefined` && localStorage.setItem('Yrbf314', che);
                setTitleForm(thanksResponse);
                setEmailInput('');
                setNameInput('');
                setInstInput('');
                setPhoneInput('');
                setAdressInput('');
            })
            .catch(function (error) {
                setTitleForm(errorResponse);
                setIsDisabled(false);
            });
    };

    const getForm = () => {


        return (
            <FormWrapper>
                <form onSubmit={handlerSendMail} className="form" id="form">
                    <h2 className="form_title">{titleForm}</h2>
                    <div className="form_fields">
                        {superPrize.includes(typePrize?.id) && <FormRow>
                            <label name='phone' htmlFor='phoneClient'>–í–∞—à–µ –∏–º—è*:</label>
                            <FormInput
                                onChange={(e) => setNameInput(e.target.value)}
                                value={nameInput}
                                type="text"
                                className="form_fields_input"
                                required
                            />
                        </FormRow>}
                        <FormRow>
                            <label name='phone' htmlFor='phoneClient'>–í–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω*:</label>
                            <FormInput
                                onChange={(e) => setPhoneInput(e.target.value)}
                                value={phoneInput}
                                type="phone"
                                className="form_fields_input"
                                required
                            />
                        </FormRow>
                        <FormRow>
                            <label name='email' htmlFor='emailClient'>–í–∞—à email*:</label>
                            <FormInput
                                onChange={(e) => setEmailInput(e.target.value)}
                                value={emailInput}
                                type="email"
                                className="form_fields_input"
                                required
                            />
                        </FormRow>
                        {superPrize.includes(typePrize?.id) && <FormRow>
                            <label name='inst' htmlFor='emailClient'>–í–∞—à instagram*:</label>
                            <FormInput
                                onChange={(e) => setInstInput(e.target.value)}
                                value={instInput}
                                type="text"
                                className="form_fields_input"
                                required
                            />
                        </FormRow>}
                        {superPrize.includes(typePrize?.id) && <FormRow>
                            <label name='inst' htmlFor='emailClient'>–í–∞—à –∞–¥—Ä–µ—Å –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏:</label>
                            <FormInput
                                onChange={(e) => setAdressInput(e.target.value)}
                                value={adressInput}
                                type="text"
                                className="form_fields_input"
                            />
                        </FormRow>}
                        <FormRow>
                            <CustomButton type="submit" disabled={isDisabled}>
                                –ø–æ–ª—É—á–∏—Ç—å
                            </CustomButton>
                        </FormRow>
                        <FormRow>
                            <div style={{ fontSize: '11px', padding: '0' }}>* - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è</div>
                        </FormRow>
                    </div>
                </form>
            </FormWrapper>
        )
    }

    return (
        <div style={{ margin: '0 10px' }}>
            {typePrize?.id && <TextWrapper>
                {dataText[typePrize.id].map((i, ind) => <p key={typePrize.id + ind} style={{ minHeight: '10px' }}>{i}</p>)}
            </TextWrapper>}
            {typePrize?.id && getForm()}
            {!typePrize?.id && <SpaceBlock />}
        </div>
    )
}
